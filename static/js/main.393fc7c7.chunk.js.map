{"version":3,"sources":["components/button/customButton.js","components/personalSelectedMovie.js","components/moviePanel.js","components/suggestionsQueryPanel.js","api/omdbAPI.js","App.js","reportWebVitals.js","index.js"],"names":["CustomButton","className","type","this","props","typeBtn","onClick","onClickBtn","title","React","Component","PersonalSelectedMovie","movie","Title","Year","imdbID","e","removeSelectedMovie","alert","MoviePanel","state","poster","Poster","Type","year","id","src","alt","addToSelectedMovies","SuggestionsQueryPanel","updateState","console","log","copyState","movieList","selectedMovies","i","Object","keys","length","Genre","split","map","genre","Genres","includes","push","Language","language","Languages","setState","submitQuery","event","preventDefault","gengreChoice","document","getElementById","value","languageChoice","movieSuggestionResult","filter","hasGenre","hasLanguage","ReleasedYears","self","window","onload","el","addEventListener","closeBtn","onSubmit","defaultValue","query","a","$","ajax","url","dataType","cache","results","error","imdbId","App","handleChangeMovieQuery","movieQuery","target","handleSubmit","searchWithTitel","then","Response","movies","Search","movieId","some","searchWithId","result","index","findIndex","m","splice","suggestMoviesBtn","x","style","width","onresize","gridElement","querySelector","innerWidth","collums","onChange","placeholder","hidden","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.393fc7c7.chunk.js","sourcesContent":["import React from 'react';\nimport './customButton.css';\n\nclass CustomButton extends React.Component {\n  render() {\n    return (\n      <div className=\"submit-wrapper\">\n        <p type={this.props.typeBtn} onClick={this.props.onClickBtn} >{this.props.title}</p>\n      </div>\n    );\n  }  \n}\n\nexport default CustomButton;","import React from 'react';\nimport CustomButton from './button/customButton';\nimport './personalSelectedMovie.css';\n\nclass PersonalSelectedMovie extends React.Component {\n\n  // TODO do some css\n  \n  render() {\n    return (\n      <div className=\"selected-movie-box\">\n        <h3 key={this.props.movie.imdbID}>{this.props.movie.Title + ' - (' + this.props.movie.Year + ')'  }</h3>\n        <CustomButton title=\"Remove\" onClickBtn={(e) => this.props.removeSelectedMovie(this.props.movie.imdbID, e)}></CustomButton>\n        <CustomButton title=\"Info\" onClickBtn={(e) => alert('function not implemented yet')}></CustomButton>\n      </div>\n    );\n  }  \n}\n\nexport default PersonalSelectedMovie;\n","import React from 'react';\nimport './moviePanel.css';\n\nimport CustomButton from './button/customButton'\n\nclass MoviePanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      poster: props.movie.Poster,\n      title: props.movie.Title,\n      type: props.movie.Type,\n      year: props.movie.Year,\n      id: props.movie.imdbID\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"owl-item\">\n        <img src={this.state.poster} alt={this.state.title}></img>\n        <div className=\"title-wrapper\"> \n          <h4> {this.state.title + ' - (' + this.state.year + ')'} </h4> \n          <p> {this.state.type} </p> \n        </div>\n        <CustomButton title=\"Add to my list\" onClickBtn={(e) => {this.props.addToSelectedMovies(this.state.id, e)}}></CustomButton>\n      </div>\n    );\n  }  \n}\n\nexport default MoviePanel;\n","import React from 'react';\nimport './suggestionsQueryPanel.css'\n\nclass SuggestionsQueryPanel extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      Genres: [],\n      ReleasedYears: [],\n      Languages: [],\n      movieSuggestionResult: []\n    };\n    \n    var self = this;\n    window.onload = function() {\n      const el = document.getElementById(\"suggestMovies\")\n      if (el) el.addEventListener(\"transitionrun\", function(){\n        self.updateState();\n      });\n    }\n  }\n\n  updateState = () => {\n    console.log(this.props);\n\n    var copyState = {...this.state};\n    const movieList = this.props.selectedMovies;\n    if (movieList === []) return;\n\n    for (var i = 0; i < Object.keys(movieList).length; i++){\n      movieList[i].Genre.split(\", \").map(genre => {\n        if (!copyState.Genres.includes(genre) && genre !== \"N/A\") copyState.Genres.push(genre);\n        return genre;\n      })\n\n      // BUGGED to many itteration of vallue also can change to Released\n      // const year = movieList[i].Year;\n      // if (!copyState.Years.includes(year)) copyState.Years.push(year);\n\n      const language = movieList[i].Language;\n      language.split(\", \").map(language => {\n        if (!copyState.Languages.includes(language) && language !== \"N/A\") copyState.Languages.push(language);\n        return language;\n      })\n    \n    }\n    this.setState(copyState);\n  }\n\n  submitQuery = (event) => {\n    event.preventDefault();\n    // TODO check if N/A\n    // CHeck if it's viable\n    console.log(\"sumbit query\")\n\n    const gengreChoice = document.getElementById(\"genre-choice\").value\n    // const yearChoice = document.getElementById(\"year-choice\").value\n    const languageChoice = document.getElementById(\"language-choice\").value\n    \n    const movieList = this.props.selectedMovies;\n\n    const movieSuggestionResult = movieList.filter(movie => {\n      var hasGenre = true;\n      var hasLanguage = true;\n\n      if (gengreChoice !== \"nvt\" && movie.Genre !== \"N/A\") {\n        hasGenre = movie.Genre.split(\", \").includes(gengreChoice);\n      }\n      if (languageChoice !== \"nvt\" && movie.Language !== \"N/A\") {\n        hasLanguage = movie.Language.split(\", \").includes(languageChoice);\n      }\n      if (hasGenre && hasLanguage) return true;\n      return false;\n    })\n\n    // TODO make it so it only saves 3 movies max\n    const copyState = {...this.state};\n    copyState.movieSuggestionResult = movieSuggestionResult;\n    this.setState(copyState);\n  }\n\n  render() {\n    return (\n      <div id=\"suggestMovies\" className=\"overlay\">\n        <div className=\"closebtn\" onClick={() => this.props.closeBtn()}></div>\n\n        <form onSubmit={this.submitQuery}>\n\n          <select id=\"genre-choice\">\n            <option defaultValue>nvt</option>\n            {this.state.Genres\n              .map(genre => \n                <option key={genre} value={genre}>{genre}</option>\n                )\n              }\n          </select>\n          <select id=\"year-choice\">\n            <option defaultValue>nvt</option>\n            {this.state.ReleasedYears\n              .map(year => \n                <option key={year} value={year}>{year}</option>\n                )\n              }\n          </select>\n          <select id=\"language-choice\">\n            <option defaultValue>nvt</option>\n            {this.state.Languages\n              .map(language => \n                <option key={language} value={language}>{language}</option>\n                )\n              }\n          </select>\n          <button type=\"submit\">start</button>\n        </form>\n        \n        {\n          this.state.movieSuggestionResult.length !==0 ? this.state.movieSuggestionResult.map(movie => \n            <h2 id={movie.imdbID} className=\"overlay-content\">{movie.Title}</h2>\n          ) : <h2 id=\"empty\" className=\"overlay-content\">No match found</h2>\n        }\n      </div>\n    );\n  }  \n}\n\nexport default SuggestionsQueryPanel;\n","// http://www.omdbapi.com/?i=tt3896198&apikey=a455290f\n\nimport $ from 'jquery'\n\n//IMDB will only return a maximum of 8 movies\nexport async function searchWithTitel(query) {\n  try {\n    const results = await $.ajax({\n      url: 'https://www.omdbapi.com/?apikey=a455290f&s=' + query,\n      dataType: 'json',\n      cache: true,\n    });\n    return results;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nexport async function searchWithId(imdbId) {\n  try {\n    const results = await $.ajax({\n      url: 'https://www.omdbapi.com/?apikey=a455290f&i=' + imdbId,\n      dataType: 'json',\n      cache: true,\n    });\n    return results;\n  } catch (err) {\n    console.error(err);\n  }\n}","import React from 'react';\nimport './App.css';\n\nimport PersonalSelectedMovie from './components/personalSelectedMovie'\nimport MoviePanel from './components/moviePanel'\nimport SuggestionsQueryPanel from './components/suggestionsQueryPanel'\n\nimport { searchWithTitel, searchWithId } from './api/omdbAPI';\nimport CustomButton from './components/button/customButton';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      movieQuery: '',\n      movies: [],\n      selectedMovies: []\n    };\n\n    window.onresize = window.onload = function() {\n      var gridElement = document.querySelector('.grid-container-movie-panel');\n    \n      var width = window.innerWidth;\n      var collums = 4;\n      \n      if (width < 1600) collums -= 1;\n      if (width < 1300) collums -= 1;\n      if (width < 1000) collums -= 1;\n      \n      gridElement.style[\"grid-template-columns\"] = \"repeat(\" + collums + \", auto)\";\n    }\n  }\n\n  handleChangeMovieQuery = (event) => {\n    const copyState = {...this.state};\n    copyState.movieQuery = event.target.value;\n    this.setState(copyState);\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.movieQuery === \"\") {\n      alert(\"Type the name of the movie\"); \n      return;\n    }\n\n    searchWithTitel(this.state.movieQuery)\n      .then(results => {\n        if (results.Response === \"True\") this.setState({movies: results.Search});\n        else {\n          //TODO Movies not found\n          alert(\"No movies found!\")\n        }\n      });\n  }\n\n  addToSelectedMovies = (movieId, event) => {\n    event.preventDefault();\n\n    const isSelected = this.state.selectedMovies.some(movie => \n      movie.imdbID === movieId\n    );\n\n    if (!isSelected) {\n      searchWithId(movieId)\n        .then(result => {\n          const copyState = {...this.state};\n          copyState.selectedMovies.push(result);\n          this.setState({selectedMovies: copyState.selectedMovies});\n        });\n    }\n  }\n\n  removeSelectedMovie = (movieId, event) => {\n    // event.preventDefault();\n\n    const copyState = {...this.state};\n    const index = copyState.selectedMovies.findIndex(m => m.imdbID === movieId);\n    copyState.selectedMovies.splice(index, 1);\n    this.setState(copyState)\n  }\n\n  suggestMoviesBtn = () => {\n    var x = document.getElementById(\"suggestMovies\");\n    if (x.style.width !== \"100%\") {\n      x.style.width = \"100%\";\n    } else {\n      x.style.width = \"0%\";\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <form className=\"search-bar\" onSubmit={this.handleSubmit}>\n          <label>\n            <input type=\"text\" value={this.state.movieQuery} onChange={this.handleChangeMovieQuery} placeholder=\"Type here the name of a movie or serrie\"/>\n          </label>\n          <input type=\"submit\" value=\"Submit\"/>\n        </form>\n        \n        <div className=\"grid-container\">\n          <div className=\"grid-container-movie-panel\">\n            {\n              this.state.movies\n              .map(movie => \n                <MoviePanel key={movie.imdbID} movie={movie} addToSelectedMovies={this.addToSelectedMovies}/>\n              )\n            }\n          </div>\n\n          <div className=\"grid-container-sellected-movies\" hidden={this.state.movies.length === 0}>\n            <div className=\"header-sellected-movies\">\n              <p>Your sellected movies and serries</p>\n              <CustomButton title=\"Start sellection\" onClickBtn={() => this.suggestMoviesBtn()}></CustomButton>\n            </div>\n            {\n              this.state.selectedMovies\n              .map(selectedMovies => \n                <PersonalSelectedMovie key={selectedMovies.imdbID} movie={selectedMovies} removeSelectedMovie={this.removeSelectedMovie}></PersonalSelectedMovie>\n              )\n            }\n          </div>\n        </div>\n\n        {/* <SuggestionsQueryPanel selectedMovies={[{Genre: 'fantasy, horror', Language: 'English'}]} closeBtn={this.suggestMoviesBtn}></SuggestionsQueryPanel> */}\n        <SuggestionsQueryPanel selectedMovies={this.state.selectedMovies} closeBtn={this.suggestMoviesBtn}></SuggestionsQueryPanel>\n\n      </div>\n    );\n  }  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}